{"version":3,"file":"user.controller.js","names":["_user","require","_bcrypt","_jwt","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","RegisterController","_classCallCheck2","_createClass2","value","_registerUser","_asyncToGenerator2","_regenerator","mark","_callee","req","res","user","_yield$UserService$re","id","email","userData","userToken","wrap","_callee$","_context","prev","next","body","BcryptUtility","hashPassword","password","sent","UserService","register","JwtUtility","generateToken","abrupt","status","json","token","t0","error","message","stop","registerUser","_x","_x2","exports"],"sources":["../../src/controllers/user.controller.js"],"sourcesContent":["import { UserService } from '../services/user.service';\nimport { BcryptUtility } from '../utils/bcrypt.util';\nimport { JwtUtility } from '../utils/jwt.util';\n\nexport class RegisterController {\n  static async registerUser(req, res) {\n    try {\n      const user = { ...req.body };\n      user.password = await BcryptUtility.hashPassword(req.body.password);\n      const { id, email } = await UserService.register(user);\n      const userData = { id, email };\n      const userToken = JwtUtility.generateToken(userData);\n      return res.status(201).json({ user: userData, token: userToken });\n    } catch (err) {\n      return res.status(500).json({\n        error: err.message,\n        message: 'Failed to register a new user',\n      });\n    }\n  }\n}\n"],"mappings":"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"}