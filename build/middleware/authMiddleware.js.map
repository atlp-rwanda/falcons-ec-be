{"version":3,"file":"authMiddleware.js","names":["_jsonwebtoken","_interopRequireDefault","require","_authService","_index","isLoggedIn","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","token","decodedData","currentUser","userObj","wrap","_callee$","_context","prev","headers","authorization","split","jwt","verify","concat","process","env","JWT_SECRET","findOneUserService","payload","id","sent","email","status","json","success","message","user","t0","stop","_x","_x2","_x3","apply","arguments","checkUserExists","_ref2","_callee2","userInDb","_callee2$","_context2","body","User","findOne","where","abrupt","_x4","_x5","_x6","exports","_default"],"sources":["../../src/middleware/authMiddleware.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport jwt from 'jsonwebtoken';\nimport findOneUserService from '../services/authService';\nimport { User } from '../database/models/index';\n\nconst isLoggedIn = async (req, res, next) => {\n  if (req.headers.authorization) {\n    const token = req.headers.authorization.split(' ')[1];\n    try {\n      const decodedData = jwt.verify(token, `${process.env.JWT_SECRET}`);\n\n      const currentUser = await findOneUserService(decodedData.payload.id);\n      const userObj = {\n        id: currentUser.id,\n        email: currentUser.email,\n      };\n      if (!currentUser) {\n        res.status(401).json({\n          status: 401,\n          success: false,\n          message: 'User does not exist!',\n        });\n      } else {\n        req.user = userObj;\n        next();\n      }\n    } catch (error) {\n      res.status(500).json({\n        status: 500,\n        success: false,\n        message: `Error when authorizing user ${error.message}`,\n      });\n    }\n  } else {\n    res.status(401).json({\n      status: 401,\n      success: false,\n      message: 'Not logged in',\n    });\n  }\n};\nexport const checkUserExists = async (req, res, next) => {\n  const { email } = req.body;\n  const userInDb = await User.findOne({\n    where: { email },\n  });\n  if (userInDb) {\n    return res.status(409).json({ message: 'Email already exists' });\n  }\n  next();\n};\nexport default isLoggedIn;\n"],"mappings":"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"}