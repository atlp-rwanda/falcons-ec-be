{"version":3,"file":"index.js","names":["_chai","_interopRequireWildcard","require","_chaiHttp","_interopRequireDefault","_supertest","_passportStub","_passport","_server","_index","_token_generator","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","expect","chai","should","use","chaiHttp","describe","before","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","db","sequelize","sync","force","stop","it","_callee2","res","_callee2$","_context2","request","app","sent","to","have","status","body","message","equal","mockUser","email","password","passportStub","install","after","uninstall","done","end","err","assert","headers","location","startsWith","_callee3","response","_callee3$","_context3","_callee4","_callee4$","_context4","generateToken","be","a","user","id","name","passport","serializeUser","serializedUser","deepEqual","_callee5","payload","token","_callee5$","_context5","_callee6","req","_callee6$","_context6","undefined","t0","an","realUser","_callee7","_callee7$","_context7","post","send","_callee8","_callee8$","_context8","_callee9","_callee9$","_context9","_callee10","loginResponse","_callee10$","_context10","concat"],"sources":["../../src/tests/index.js"],"sourcesContent":["import chai, { assert } from 'chai';\nimport chaiHttp from 'chai-http';\nimport request from 'supertest';\nimport passportStub from 'passport-stub';\nimport passport from 'passport';\nimport app from '../server.js';\nimport db from '../database/models/index';\nimport generateToken from '../helpers/token_generator.js';\n\nconst { expect } = chai;\n\nchai.should();\n\nchai.use(chaiHttp);\n\ndescribe('Welcome Controller', () => {\n  before(async () => {\n    // run migrations and seeders to prepare the database\n    await db.sequelize.sync({ force: false });\n  });\n\n  describe('GET /welcome', () => {\n    it('should return a 200 response and a welcome message', async () => {\n      const res = await chai.request(app).get('/welcome');\n      expect(res).to.have.status(200);\n      expect(res.body.message).to.equal('Test controller OK');\n    });\n  });\n});\n\ndescribe('Google Authentication', () => {\n  const mockUser = {\n    email: 'johndoe@gmail.com',\n    password: '12345678',\n  };\n\n  describe('GET /auth/google', () => {\n    before(() => {\n      // set up passport-stub to simulate authentication\n      passportStub.install(app);\n    });\n\n    after(() => {\n      // uninstall passport-stub after the tests are finished\n      passportStub.uninstall();\n    });\n\n    it('should redirect to Google auth page', (done) => {\n      request(app)\n        .get('/auth/google')\n        .expect(302) // expect a redirect\n        .end((err, res) => {\n          if (err) return done(err);\n          assert(\n            res.headers.location.startsWith(\n              'https://accounts.google.com/o/oauth2/v2/auth',\n            ),\n          );\n          done();\n        });\n    });\n  });\n\n  describe('GET /google/callback', () => {\n    it('should get a Bad Request when accessing google callback with no token', async () => {\n      const response = await request(app).get('/google/callback');\n      expect(response.status).to.equal(302);\n    });\n\n    it('should return a token when generateToken is called ', async () => {\n      const response = await generateToken(mockUser);\n      expect(response).to.be.a('string');\n    });\n  });\n  describe('serializeUser', () => {\n    it('should serialize user object', (done) => {\n      const user = { id: 123, name: 'John Doe' };\n      passport.serializeUser((user, done) => {\n        done(null, user);\n      });\n      passport.serializeUser(user, (err, serializedUser) => {\n        if (err) return done(err);\n        assert.deepEqual(serializedUser, user);\n        done();\n      });\n    });\n  });\n});\ndescribe('generateToken', () => {\n  it('should return a token when provided with valid payload', async () => {\n    const payload = { email: 'johndoe@gmail.com', password: '123' };\n\n    const token = await generateToken(payload);\n\n    expect(token).to.be.a('string');\n  });\n\n  it('should throw an error when provided with an invalid payload', async () => {\n    const payload = undefined;\n    const req = {};\n    const res = {};\n\n    try {\n      const token = await generateToken(payload);\n    } catch (err) {\n      expect(err).to.be.an('error');\n    }\n  });\n});\ndescribe('login', () => {\n  const user = {\n    email: 'johndoe@gmail.com',\n    password: '12345678',\n  };\n  const realUser = {\n    email: 'boris@gmail.com',\n    password: '1234',\n  };\n\n  describe('POST /api/v1/users/signin', () => {\n    it('should respond with status code 200', async () => {\n      const response = await chai\n        .request(app)\n        .post('/api/v1/users/signin')\n        .send(realUser);\n      expect(response.status).to.equal(200);\n    });\n    it('should throw an error if invalid credentials', async () => {\n      const response = await chai\n        .request(app)\n        .post('/api/v1/users/signin')\n        .send({ email: 'boris250@gmail.com', password: '123' });\n      expect(response.status).to.equal(401);\n    });\n    it('should throw error if user does not exist ', async () => {\n      const response = await chai\n        .request(app)\n        .post('/api/v1/users/signin')\n        .send(user);\n      expect(response.status).to.equal(401);\n    });\n    it('should respond with an array of users', async () => {\n      const loginResponse = await chai\n        .request(app)\n        .post('/api/v1/users/signin')\n        .send(realUser);\n      const { token } = loginResponse.body;\n      const response = await chai\n        .request(app)\n        .get('/api/v1/users')\n        .set('Authorization', `Bearer ${token}`);\n      expect(response.body).to.be.an('array');\n    });\n  });\n});\n"],"mappings":"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"}