{"version":3,"file":"index.js","names":["_chai","_interopRequireWildcard","require","_chaiHttp","_interopRequireDefault","_supertest","_passportStub","_passport","_server","_index","_token_generator","_fs","_regeneratorRuntime2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","expect","chai","should","use","chaiHttp","_TOKEN","describe","it","_asyncToGenerator2","_regenerator","mark","_callee","res","wrap","_callee$","_context","prev","next","request","app","sent","to","have","status","body","message","equal","stop","mockUser","email","password","before","passportStub","install","after","uninstall","done","end","err","assert","headers","location","startsWith","_callee2","response","_callee2$","_context2","_callee3","_callee3$","_context3","generateToken","be","a","user","id","name","passport","serializeUser","serializedUser","deepEqual","_callee4","payload","token","_callee4$","_context4","_callee5","req","_callee5$","_context5","undefined","t0","an","realUser","_callee6","_callee6$","_context6","post","send","_callee7","_callee7$","_context7","_callee8","_callee8$","_context8","_callee9","loginResponse","_callee9$","_context9","concat","fakeUser","unauthorisedUser","_callee10","_callee10$","_context10","_callee11","_callee11$","_context11","_callee12","_callee12$","_context12","_callee13","_callee13$","_context13","put","role","_callee14","_callee14$","_context14","_callee15","_callee15$","_context15","_callee20","product","invalidproduct","_callee20$","_context20","productName","categoryName","description","price","quantity","expiryDate","_callee16","_callee16$","_context16","_callee17","_callee17$","_context17","_callee18","_callee18$","_context18","_callee19","_callee19$","_context19","_callee21","_callee21$","_context21","patch","_callee22","_callee22$","_context22"],"sources":["../../src/tests/index.js"],"sourcesContent":["import chai, { assert } from \"chai\";\nimport chaiHttp from \"chai-http\";\nimport request from \"supertest\";\nimport passportStub from \"passport-stub\";\nimport passport from \"passport\";\nimport app from \"../server.js\";\nimport db from \"../database/models/index\";\nimport generateToken from \"../helpers/token_generator.js\";\nimport fs from \"fs\";\nimport { async } from \"regenerator-runtime\";\n\nconst { expect } = chai;\n\nchai.should();\n\nchai.use(chaiHttp);\n\nlet _TOKEN = \"\";\n\ndescribe(\"Welcome Controller\", () => {\n  // before(async () => {\n  //   // run migrations and seeders to prepare the database\n  //   await db.sequelize.sync({ force: true });\n  // });\n\n  describe(\"GET /welcome\", () => {\n    it(\"should return a 200 response and a welcome message\", async () => {\n      const res = await chai.request(app).get(\"/api/v1/welcome\");\n      expect(res).to.have.status(200);\n      expect(res.body.message).to.equal(\"Test controller OK\");\n    });\n  });\n});\n\ndescribe(\"Google Authentication\", () => {\n  const mockUser = {\n    email: \"johndoe@gmail.com\",\n    password: \"12345678\",\n  };\n\n  describe(\"GET /auth/google\", () => {\n    before(() => {\n      // set up passport-stub to simulate authentication\n      passportStub.install(app);\n    });\n\n    after(() => {\n      // uninstall passport-stub after the tests are finished\n      passportStub.uninstall();\n    });\n\n    it(\"should redirect to Google auth page\", (done) => {\n      request(app)\n        .get(\"/auth/google\")\n        .expect(302) // expect a redirect\n        .end((err, res) => {\n          if (err) return done(err);\n          assert(\n            res.headers.location.startsWith(\n              \"https://accounts.google.com/o/oauth2/v2/auth\"\n            )\n          );\n          done();\n        });\n    });\n  });\n\n  describe(\"GET /google/callback\", () => {\n    it(\"should get a Bad Request when accessing google callback with no token\", async () => {\n      const response = await request(app).get(\"/google/callback\");\n      expect(response.status).to.equal(302);\n    });\n\n    it(\"should return a token when generateToken is called \", async () => {\n      const response = await generateToken(mockUser);\n      expect(response).to.be.a(\"string\");\n    });\n  });\n  describe(\"serializeUser\", () => {\n    it(\"should serialize user object\", (done) => {\n      const user = { id: 123, name: \"John Doe\" };\n      passport.serializeUser((user, done) => {\n        done(null, user);\n      });\n      passport.serializeUser(user, (err, serializedUser) => {\n        if (err) return done(err);\n        assert.deepEqual(serializedUser, user);\n        done();\n      });\n    });\n  });\n});\ndescribe(\"generateToken\", () => {\n  it(\"should return a token when provided with valid payload\", async () => {\n    const payload = { email: \"johndoe@gmail.com\", password: \"123\" };\n\n    const token = await generateToken(payload);\n\n    expect(token).to.be.a(\"string\");\n  });\n\n  it(\"should throw an error when provided with an invalid payload\", async () => {\n    const payload = undefined;\n    const req = {};\n    const res = {};\n\n    try {\n      const token = await generateToken(payload);\n    } catch (err) {\n      expect(err).to.be.an(\"error\");\n    }\n  });\n});\ndescribe(\"login\", () => {\n  const user = {\n    email: \"johndoe@gmail.com\",\n    password: \"12345678\",\n  };\n  const realUser = {\n    email: \"boris@gmail.com\",\n    password: \"1234\",\n  };\n\n  describe(\"POST /api/v1/users/signin\", () => {\n    it(\"should respond with status code 200\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/users/signin\")\n        .send(realUser);\n      expect(response.status).to.equal(200);\n    });\n    it(\"should throw an error if invalid credentials\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/users/signin\")\n        .send({ email: \"boris250@gmail.com\", password: \"123\" });\n      expect(response.status).to.equal(401);\n    });\n    it(\"should throw error if user does not exist \", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/users/signin\")\n        .send(user);\n      expect(response.status).to.equal(400);\n    });\n    it(\"should respond with an array of users\", async () => {\n      const loginResponse = await chai\n        .request(app)\n        .post(\"/api/v1/users/signin\")\n        .send(realUser);\n      const { token } = loginResponse.body;\n      const response = await chai\n        .request(app)\n        .get(\"/api/v1/users\")\n        .set(\"Authorization\", `Bearer ${token}`);\n      expect(response.body).to.be.an(\"array\");\n    });\n  });\n});\n\ndescribe(\"Set user role\", () => {\n  const fakeUser = {\n    email: \"admin@gmail.com\",\n    password: \"password\",\n  };\n\n  const unauthorisedUser = {\n    //user with just buyer role\n    email: \"boris@gmail.com\",\n    password: \"1234\",\n  };\n\n  describe(\"POST /api/v1/users/signup\", () => {\n    \n    it(\"should not create a user without full data provided\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/users/signup\")\n        .send({password:\"1234\"});\n      expect(response.status).to.equal(400);\n    });\n  \n    \n    it(\"should create a fake admin\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/users/signup\")\n        .send(fakeUser);\n      expect(response.status).to.equal(200);\n    });\n  });\n\n  describe(\"PUT /api/v1/users/:id/roles\", () => {\n    it(\"should authorise the user without admin role\", async () => {\n      const loginResponse = await chai\n        .request(app)\n        .post(\"/api/v1/users/signin\")\n        .send(unauthorisedUser);\n      _TOKEN = loginResponse.body.token;\n      expect(loginResponse.status).to.equal(200);\n    });\n\n    it(\"should deny the unauthorised user\", async () => {\n      const response = await chai\n        .request(app)\n        .put(`/api/v1/users/${fakeUser.email}/roles`)\n        .set(\"Authorization\", `Bearer ${_TOKEN}`)\n        .send({ role: \"seller\" });\n\n      expect(response.status).to.equal(400);\n    });\n\n    it(\"should authorise the fake admin\", async () => {\n      const loginResponse = await chai\n        .request(app)\n        .post(\"/api/v1/users/signin\")\n        .send(fakeUser);\n      _TOKEN = loginResponse.body.token;\n      expect(loginResponse.status).to.equal(200);\n    });\n\n    it(\"should set the role to seller\", async () => {\n      const response = await chai\n        .request(app)\n        .put(`/api/v1/users/${fakeUser.email}/roles`)\n        .set(\"Authorization\", `Bearer ${_TOKEN}`)\n        .send({ role: \"seller\" });\n\n      expect(response.status).to.equal(200);\n    });\n  });\n});\n\ndescribe(\"PRODUCT\", async () => {\n  const realUser = {\n    email: \"boris@gmail.com\",\n    password: \"1234\",\n  };\n  const response = await chai\n    .request(app)\n    .post(\"/api/v1/users/signin\")\n    .send(realUser);\n  const { token } = response.body;\n  const product = {\n    productName: \"test\",\n    categoryName: \"test\",\n    description: \"test\",\n    price: 100,\n    quantity: 10,\n    expiryDate: \"12/12/12\",\n  };\n  const invalidproduct = {\n    productName: \"test\",\n    description: \"test\",\n    price: 100,\n    quantity: 10,\n    expiryDate: \"12/12/12\",\n  };\n  expect(response.status).to.equal(200);\n  describe(\"POST /api/v1/products\", () => {\n    it(\"should create a Product\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/products\")\n        .set(\"Authorization\", `Bearer ${token}`)\n        .send(product);\n      expect(response.status).to.equal(201);\n      // expect(response.body).to.be.an('array');\n    });\n    it(\"should return 400 incase validation fails\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/products\")\n        .set(\"Authorization\", `Bearer ${token}`)\n        .send(invalidproduct);\n      expect(response.status).to.equal(400);\n    });\n    it(\"should return 400 incase validation fails\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/products\")\n        .set(\"Authorization\", `Bearer ${token}`)\n        .send(invalidproduct);\n      expect(response.status).to.equal(400);\n    });\n\n    it(\"should return 401 if user is not logged in\", async () => {\n      const response = await chai\n        .request(app)\n        .post(\"/api/v1/products\")\n        .send(invalidproduct);\n      expect(response.status).to.equal(401);\n    });\n  });\n});\n\ndescribe(\"Disable account\", () => {\n  it(\"should disable an account\", async () => {\n    const response = await chai\n      .request(app)\n      .patch(`/api/v1/users/eric@gmail.com/status`)\n      .set(\"Authorization\", `Bearer ${_TOKEN}`);\n    expect(response.status).to.equal(200);\n  });\n\n  it(\"should enable an account\", async () => {\n    const response = await chai\n      .request(app)\n      .patch(`/api/v1/users/eric@gmail.com/status`)\n      .set(\"Authorization\", `Bearer ${_TOKEN}`);\n    expect(response.status).to.equal(200);\n  });\n});\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,UAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,aAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,SAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,OAAA,GAAAJ,sBAAA,CAAAF,OAAA;AACA,IAAAO,MAAA,GAAAL,sBAAA,CAAAF,OAAA;AACA,IAAAQ,gBAAA,GAAAN,sBAAA,CAAAF,OAAA;AACA,IAAAS,GAAA,GAAAP,sBAAA,CAAAF,OAAA;AACA,IAAAU,oBAAA,GAAAV,OAAA;AAA4C,SAAAW,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAb,wBAAAiB,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE5C,IAAQW,MAAM,GAAKC,gBAAI,CAAfD,MAAM;AAEdC,gBAAI,CAACC,MAAM,EAAE;AAEbD,gBAAI,CAACE,GAAG,CAACC,oBAAQ,CAAC;AAElB,IAAIC,MAAM,GAAG,EAAE;AAEfC,QAAQ,CAAC,oBAAoB,EAAE,YAAM;EACnC;EACA;EACA;EACA;;EAEAA,QAAQ,CAAC,cAAc,EAAE,YAAM;IAC7BC,EAAE,CAAC,oDAAoD,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAC,QAAA;MAAA,IAAAC,GAAA;MAAA,OAAAH,YAAA,YAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACrChB,gBAAI,CAACiB,OAAO,CAACC,kBAAG,CAAC,CAAC/B,GAAG,CAAC,iBAAiB,CAAC;UAAA;YAApDwB,GAAG,GAAAG,QAAA,CAAAK,IAAA;YACTpB,MAAM,CAACY,GAAG,CAAC,CAACS,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;YAC/BvB,MAAM,CAACY,GAAG,CAACY,IAAI,CAACC,OAAO,CAAC,CAACJ,EAAE,CAACK,KAAK,CAAC,oBAAoB,CAAC;UAAC;UAAA;YAAA,OAAAX,QAAA,CAAAY,IAAA;QAAA;MAAA,GAAAhB,OAAA;IAAA,CACzD,GAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFL,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtC,IAAMsB,QAAQ,GAAG;IACfC,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE;EACZ,CAAC;EAEDxB,QAAQ,CAAC,kBAAkB,EAAE,YAAM;IACjCyB,MAAM,CAAC,YAAM;MACX;MACAC,wBAAY,CAACC,OAAO,CAACd,kBAAG,CAAC;IAC3B,CAAC,CAAC;IAEFe,KAAK,CAAC,YAAM;MACV;MACAF,wBAAY,CAACG,SAAS,EAAE;IAC1B,CAAC,CAAC;IAEF5B,EAAE,CAAC,qCAAqC,EAAE,UAAC6B,IAAI,EAAK;MAClD,IAAAlB,qBAAO,EAACC,kBAAG,CAAC,CACT/B,GAAG,CAAC,cAAc,CAAC,CACnBY,MAAM,CAAC,GAAG,CAAC,CAAC;MAAA,CACZqC,GAAG,CAAC,UAACC,GAAG,EAAE1B,GAAG,EAAK;QACjB,IAAI0B,GAAG,EAAE,OAAOF,IAAI,CAACE,GAAG,CAAC;QACzB,IAAAC,YAAM,EACJ3B,GAAG,CAAC4B,OAAO,CAACC,QAAQ,CAACC,UAAU,CAC7B,8CAA8C,CAC/C,CACF;QACDN,IAAI,EAAE;MACR,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF9B,QAAQ,CAAC,sBAAsB,EAAE,YAAM;IACrCC,EAAE,CAAC,uEAAuE,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAiC,SAAA;MAAA,IAAAC,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAgC,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA9B,IAAA,GAAA8B,SAAA,CAAA7B,IAAA;UAAA;YAAA6B,SAAA,CAAA7B,IAAA;YAAA,OACnD,IAAAC,qBAAO,EAACC,kBAAG,CAAC,CAAC/B,GAAG,CAAC,kBAAkB,CAAC;UAAA;YAArDwD,QAAQ,GAAAE,SAAA,CAAA1B,IAAA;YACdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAoB,SAAA,CAAAnB,IAAA;QAAA;MAAA,GAAAgB,QAAA;IAAA,CACvC,GAAC;IAEFpC,EAAE,CAAC,qDAAqD,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAqC,SAAA;MAAA,IAAAH,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAmC,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjC,IAAA,GAAAiC,SAAA,CAAAhC,IAAA;UAAA;YAAAgC,SAAA,CAAAhC,IAAA;YAAA,OACjC,IAAAiC,2BAAa,EAACtB,QAAQ,CAAC;UAAA;YAAxCgB,QAAQ,GAAAK,SAAA,CAAA7B,IAAA;YACdpB,MAAM,CAAC4C,QAAQ,CAAC,CAACvB,EAAE,CAAC8B,EAAE,CAACC,CAAC,CAAC,QAAQ,CAAC;UAAC;UAAA;YAAA,OAAAH,SAAA,CAAAtB,IAAA;QAAA;MAAA,GAAAoB,QAAA;IAAA,CACpC,GAAC;EACJ,CAAC,CAAC;EACFzC,QAAQ,CAAC,eAAe,EAAE,YAAM;IAC9BC,EAAE,CAAC,8BAA8B,EAAE,UAAC6B,IAAI,EAAK;MAC3C,IAAMiB,IAAI,GAAG;QAAEC,EAAE,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAW,CAAC;MAC1CC,oBAAQ,CAACC,aAAa,CAAC,UAACJ,IAAI,EAAEjB,IAAI,EAAK;QACrCA,IAAI,CAAC,IAAI,EAAEiB,IAAI,CAAC;MAClB,CAAC,CAAC;MACFG,oBAAQ,CAACC,aAAa,CAACJ,IAAI,EAAE,UAACf,GAAG,EAAEoB,cAAc,EAAK;QACpD,IAAIpB,GAAG,EAAE,OAAOF,IAAI,CAACE,GAAG,CAAC;QACzBC,YAAM,CAACoB,SAAS,CAACD,cAAc,EAAEL,IAAI,CAAC;QACtCjB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACF9B,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,wDAAwD,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAkD,SAAA;IAAA,IAAAC,OAAA,EAAAC,KAAA;IAAA,OAAArD,YAAA,YAAAI,IAAA,UAAAkD,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAhD,IAAA,GAAAgD,SAAA,CAAA/C,IAAA;QAAA;UACrD4C,OAAO,GAAG;YAAEhC,KAAK,EAAE,mBAAmB;YAAEC,QAAQ,EAAE;UAAM,CAAC;UAAAkC,SAAA,CAAA/C,IAAA;UAAA,OAE3C,IAAAiC,2BAAa,EAACW,OAAO,CAAC;QAAA;UAApCC,KAAK,GAAAE,SAAA,CAAA5C,IAAA;UAEXpB,MAAM,CAAC8D,KAAK,CAAC,CAACzC,EAAE,CAAC8B,EAAE,CAACC,CAAC,CAAC,QAAQ,CAAC;QAAC;QAAA;UAAA,OAAAY,SAAA,CAAArC,IAAA;MAAA;IAAA,GAAAiC,QAAA;EAAA,CACjC,GAAC;EAEFrD,EAAE,CAAC,6DAA6D,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAuD,SAAA;IAAA,IAAAJ,OAAA,EAAAK,GAAA,EAAAtD,GAAA,EAAAkD,KAAA;IAAA,OAAArD,YAAA,YAAAI,IAAA,UAAAsD,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApD,IAAA,GAAAoD,SAAA,CAAAnD,IAAA;QAAA;UAC1D4C,OAAO,GAAGQ,SAAS;UACnBH,GAAG,GAAG,CAAC,CAAC;UACRtD,GAAG,GAAG,CAAC,CAAC;UAAAwD,SAAA,CAAApD,IAAA;UAAAoD,SAAA,CAAAnD,IAAA;UAAA,OAGQ,IAAAiC,2BAAa,EAACW,OAAO,CAAC;QAAA;UAApCC,KAAK,GAAAM,SAAA,CAAAhD,IAAA;UAAAgD,SAAA,CAAAnD,IAAA;UAAA;QAAA;UAAAmD,SAAA,CAAApD,IAAA;UAAAoD,SAAA,CAAAE,EAAA,GAAAF,SAAA;UAEXpE,MAAM,CAAAoE,SAAA,CAAAE,EAAA,CAAK,CAACjD,EAAE,CAAC8B,EAAE,CAACoB,EAAE,CAAC,OAAO,CAAC;QAAC;QAAA;UAAA,OAAAH,SAAA,CAAAzC,IAAA;MAAA;IAAA,GAAAsC,QAAA;EAAA,CAEjC,GAAC;AACJ,CAAC,CAAC;AACF3D,QAAQ,CAAC,OAAO,EAAE,YAAM;EACtB,IAAM+C,IAAI,GAAG;IACXxB,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAM0C,QAAQ,GAAG;IACf3C,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAE;EACZ,CAAC;EAEDxB,QAAQ,CAAC,2BAA2B,EAAE,YAAM;IAC1CC,EAAE,CAAC,qCAAqC,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA+D,SAAA;MAAA,IAAA7B,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAA6D,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAA1D,IAAA;UAAA;YAAA0D,SAAA,CAAA1D,IAAA;YAAA,OACjBhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACL,QAAQ,CAAC;UAAA;YAHX5B,QAAQ,GAAA+B,SAAA,CAAAvD,IAAA;YAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAiD,SAAA,CAAAhD,IAAA;QAAA;MAAA,GAAA8C,QAAA;IAAA,CACvC,GAAC;IACFlE,EAAE,CAAC,8CAA8C,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAoE,SAAA;MAAA,IAAAlC,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAkE,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAhE,IAAA,GAAAgE,SAAA,CAAA/D,IAAA;UAAA;YAAA+D,SAAA,CAAA/D,IAAA;YAAA,OAC1BhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAAC;cAAEhD,KAAK,EAAE,oBAAoB;cAAEC,QAAQ,EAAE;YAAM,CAAC,CAAC;UAAA;YAHnDc,QAAQ,GAAAoC,SAAA,CAAA5D,IAAA;YAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAsD,SAAA,CAAArD,IAAA;QAAA;MAAA,GAAAmD,QAAA;IAAA,CACvC,GAAC;IACFvE,EAAE,CAAC,4CAA4C,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAuE,SAAA;MAAA,IAAArC,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAqE,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnE,IAAA,GAAAmE,SAAA,CAAAlE,IAAA;UAAA;YAAAkE,SAAA,CAAAlE,IAAA;YAAA,OACxBhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACxB,IAAI,CAAC;UAAA;YAHPT,QAAQ,GAAAuC,SAAA,CAAA/D,IAAA;YAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAyD,SAAA,CAAAxD,IAAA;QAAA;MAAA,GAAAsD,QAAA;IAAA,CACvC,GAAC;IACF1E,EAAE,CAAC,uCAAuC,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA0E,SAAA;MAAA,IAAAC,aAAA,EAAAvB,KAAA,EAAAlB,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAyE,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAvE,IAAA,GAAAuE,SAAA,CAAAtE,IAAA;UAAA;YAAAsE,SAAA,CAAAtE,IAAA;YAAA,OACdhB,gBAAI,CAC7BiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACL,QAAQ,CAAC;UAAA;YAHXa,aAAa,GAAAE,SAAA,CAAAnE,IAAA;YAIX0C,KAAK,GAAKuB,aAAa,CAAC7D,IAAI,CAA5BsC,KAAK;YAAAyB,SAAA,CAAAtE,IAAA;YAAA,OACUhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZ/B,GAAG,CAAC,eAAe,CAAC,CACpBW,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAY1B,KAAK,EAAG;UAAA;YAHpClB,QAAQ,GAAA2C,SAAA,CAAAnE,IAAA;YAIdpB,MAAM,CAAC4C,QAAQ,CAACpB,IAAI,CAAC,CAACH,EAAE,CAAC8B,EAAE,CAACoB,EAAE,CAAC,OAAO,CAAC;UAAC;UAAA;YAAA,OAAAgB,SAAA,CAAA5D,IAAA;QAAA;MAAA,GAAAyD,QAAA;IAAA,CACzC,GAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF9E,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9B,IAAMmF,QAAQ,GAAG;IACf5D,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAM4D,gBAAgB,GAAG;IACvB;IACA7D,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAE;EACZ,CAAC;EAEDxB,QAAQ,CAAC,2BAA2B,EAAE,YAAM;IAE1CC,EAAE,CAAC,qDAAqD,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAiF,UAAA;MAAA,IAAA/C,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAA+E,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAA7E,IAAA,GAAA6E,UAAA,CAAA5E,IAAA;UAAA;YAAA4E,UAAA,CAAA5E,IAAA;YAAA,OACjChB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAAC;cAAC/C,QAAQ,EAAC;YAAM,CAAC,CAAC;UAAA;YAHpBc,QAAQ,GAAAiD,UAAA,CAAAzE,IAAA;YAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAmE,UAAA,CAAAlE,IAAA;QAAA;MAAA,GAAAgE,SAAA;IAAA,CACvC,GAAC;IAGFpF,EAAE,CAAC,4BAA4B,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAoF,UAAA;MAAA,IAAAlD,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAkF,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAhF,IAAA,GAAAgF,UAAA,CAAA/E,IAAA;UAAA;YAAA+E,UAAA,CAAA/E,IAAA;YAAA,OACRhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACY,QAAQ,CAAC;UAAA;YAHX7C,QAAQ,GAAAoD,UAAA,CAAA5E,IAAA;YAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAsE,UAAA,CAAArE,IAAA;QAAA;MAAA,GAAAmE,SAAA;IAAA,CACvC,GAAC;EACJ,CAAC,CAAC;EAEFxF,QAAQ,CAAC,6BAA6B,EAAE,YAAM;IAC5CC,EAAE,CAAC,8CAA8C,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAuF,UAAA;MAAA,IAAAZ,aAAA;MAAA,OAAA5E,YAAA,YAAAI,IAAA,UAAAqF,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAnF,IAAA,GAAAmF,UAAA,CAAAlF,IAAA;UAAA;YAAAkF,UAAA,CAAAlF,IAAA;YAAA,OACrBhB,gBAAI,CAC7BiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACa,gBAAgB,CAAC;UAAA;YAHnBL,aAAa,GAAAc,UAAA,CAAA/E,IAAA;YAInBf,MAAM,GAAGgF,aAAa,CAAC7D,IAAI,CAACsC,KAAK;YACjC9D,MAAM,CAACqF,aAAa,CAAC9D,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAyE,UAAA,CAAAxE,IAAA;QAAA;MAAA,GAAAsE,SAAA;IAAA,CAC5C,GAAC;IAEF1F,EAAE,CAAC,mCAAmC,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA0F,UAAA;MAAA,IAAAxD,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAwF,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAtF,IAAA,GAAAsF,UAAA,CAAArF,IAAA;UAAA;YAAAqF,UAAA,CAAArF,IAAA;YAAA,OACfhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZoF,GAAG,kBAAAf,MAAA,CAAkBC,QAAQ,CAAC5D,KAAK,YAAS,CAC5C9B,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAYnF,MAAM,EAAG,CACxCwE,IAAI,CAAC;cAAE2B,IAAI,EAAE;YAAS,CAAC,CAAC;UAAA;YAJrB5D,QAAQ,GAAA0D,UAAA,CAAAlF,IAAA;YAMdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAA4E,UAAA,CAAA3E,IAAA;QAAA;MAAA,GAAAyE,SAAA;IAAA,CACvC,GAAC;IAEF7F,EAAE,CAAC,iCAAiC,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA+F,UAAA;MAAA,IAAApB,aAAA;MAAA,OAAA5E,YAAA,YAAAI,IAAA,UAAA6F,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAA3F,IAAA,GAAA2F,UAAA,CAAA1F,IAAA;UAAA;YAAA0F,UAAA,CAAA1F,IAAA;YAAA,OACRhB,gBAAI,CAC7BiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACY,QAAQ,CAAC;UAAA;YAHXJ,aAAa,GAAAsB,UAAA,CAAAvF,IAAA;YAInBf,MAAM,GAAGgF,aAAa,CAAC7D,IAAI,CAACsC,KAAK;YACjC9D,MAAM,CAACqF,aAAa,CAAC9D,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAiF,UAAA,CAAAhF,IAAA;QAAA;MAAA,GAAA8E,SAAA;IAAA,CAC5C,GAAC;IAEFlG,EAAE,CAAC,+BAA+B,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAkG,UAAA;MAAA,IAAAhE,QAAA;MAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAgG,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAA9F,IAAA,GAAA8F,UAAA,CAAA7F,IAAA;UAAA;YAAA6F,UAAA,CAAA7F,IAAA;YAAA,OACXhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZoF,GAAG,kBAAAf,MAAA,CAAkBC,QAAQ,CAAC5D,KAAK,YAAS,CAC5C9B,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAYnF,MAAM,EAAG,CACxCwE,IAAI,CAAC;cAAE2B,IAAI,EAAE;YAAS,CAAC,CAAC;UAAA;YAJrB5D,QAAQ,GAAAkE,UAAA,CAAA1F,IAAA;YAMdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;UAAC;UAAA;YAAA,OAAAoF,UAAA,CAAAnF,IAAA;QAAA;MAAA,GAAAiF,SAAA;IAAA,CACvC,GAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFtG,QAAQ,CAAC,SAAS,mBAAAE,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAqG,UAAA;EAAA,IAAAvC,QAAA,EAAA5B,QAAA,EAAAkB,KAAA,EAAAkD,OAAA,EAAAC,cAAA;EAAA,OAAAxG,YAAA,YAAAI,IAAA,UAAAqG,WAAAC,UAAA;IAAA,kBAAAA,UAAA,CAAAnG,IAAA,GAAAmG,UAAA,CAAAlG,IAAA;MAAA;QACZuD,QAAQ,GAAG;UACf3C,KAAK,EAAE,iBAAiB;UACxBC,QAAQ,EAAE;QACZ,CAAC;QAAAqF,UAAA,CAAAlG,IAAA;QAAA,OACsBhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,IAAI,CAACL,QAAQ,CAAC;MAAA;QAHX5B,QAAQ,GAAAuE,UAAA,CAAA/F,IAAA;QAIN0C,KAAK,GAAKlB,QAAQ,CAACpB,IAAI,CAAvBsC,KAAK;QACPkD,OAAO,GAAG;UACdI,WAAW,EAAE,MAAM;UACnBC,YAAY,EAAE,MAAM;UACpBC,WAAW,EAAE,MAAM;UACnBC,KAAK,EAAE,GAAG;UACVC,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE;QACd,CAAC;QACKR,cAAc,GAAG;UACrBG,WAAW,EAAE,MAAM;UACnBE,WAAW,EAAE,MAAM;UACnBC,KAAK,EAAE,GAAG;UACVC,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE;QACd,CAAC;QACDzH,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;QACrCpB,QAAQ,CAAC,uBAAuB,EAAE,YAAM;UACtCC,EAAE,CAAC,yBAAyB,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAgH,UAAA;YAAA,IAAA9E,QAAA;YAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAA8G,WAAAC,UAAA;cAAA,kBAAAA,UAAA,CAAA5G,IAAA,GAAA4G,UAAA,CAAA3G,IAAA;gBAAA;kBAAA2G,UAAA,CAAA3G,IAAA;kBAAA,OACLhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,kBAAkB,CAAC,CACxB7E,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAY1B,KAAK,EAAG,CACvCe,IAAI,CAACmC,OAAO,CAAC;gBAAA;kBAJVpE,QAAQ,GAAAgF,UAAA,CAAAxG,IAAA;kBAKdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;kBACrC;gBAAA;gBAAA;kBAAA,OAAAkG,UAAA,CAAAjG,IAAA;cAAA;YAAA,GAAA+F,SAAA;UAAA,CACD,GAAC;UACFnH,EAAE,CAAC,2CAA2C,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAmH,UAAA;YAAA,IAAAjF,QAAA;YAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAiH,WAAAC,UAAA;cAAA,kBAAAA,UAAA,CAAA/G,IAAA,GAAA+G,UAAA,CAAA9G,IAAA;gBAAA;kBAAA8G,UAAA,CAAA9G,IAAA;kBAAA,OACvBhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,kBAAkB,CAAC,CACxB7E,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAY1B,KAAK,EAAG,CACvCe,IAAI,CAACoC,cAAc,CAAC;gBAAA;kBAJjBrE,QAAQ,GAAAmF,UAAA,CAAA3G,IAAA;kBAKdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;gBAAC;gBAAA;kBAAA,OAAAqG,UAAA,CAAApG,IAAA;cAAA;YAAA,GAAAkG,SAAA;UAAA,CACvC,GAAC;UACFtH,EAAE,CAAC,2CAA2C,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAsH,UAAA;YAAA,IAAApF,QAAA;YAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAoH,WAAAC,UAAA;cAAA,kBAAAA,UAAA,CAAAlH,IAAA,GAAAkH,UAAA,CAAAjH,IAAA;gBAAA;kBAAAiH,UAAA,CAAAjH,IAAA;kBAAA,OACvBhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,kBAAkB,CAAC,CACxB7E,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAY1B,KAAK,EAAG,CACvCe,IAAI,CAACoC,cAAc,CAAC;gBAAA;kBAJjBrE,QAAQ,GAAAsF,UAAA,CAAA9G,IAAA;kBAKdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;gBAAC;gBAAA;kBAAA,OAAAwG,UAAA,CAAAvG,IAAA;cAAA;YAAA,GAAAqG,SAAA;UAAA,CACvC,GAAC;UAEFzH,EAAE,CAAC,4CAA4C,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAyH,UAAA;YAAA,IAAAvF,QAAA;YAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAAuH,WAAAC,UAAA;cAAA,kBAAAA,UAAA,CAAArH,IAAA,GAAAqH,UAAA,CAAApH,IAAA;gBAAA;kBAAAoH,UAAA,CAAApH,IAAA;kBAAA,OACxBhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZyD,IAAI,CAAC,kBAAkB,CAAC,CACxBC,IAAI,CAACoC,cAAc,CAAC;gBAAA;kBAHjBrE,QAAQ,GAAAyF,UAAA,CAAAjH,IAAA;kBAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;gBAAC;gBAAA;kBAAA,OAAA2G,UAAA,CAAA1G,IAAA;cAAA;YAAA,GAAAwG,SAAA;UAAA,CACvC,GAAC;QACJ,CAAC,CAAC;MAAC;MAAA;QAAA,OAAAhB,UAAA,CAAAxF,IAAA;IAAA;EAAA,GAAAoF,SAAA;AAAA,CACJ,GAAC;AAEFzG,QAAQ,CAAC,iBAAiB,EAAE,YAAM;EAChCC,EAAE,CAAC,2BAA2B,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA4H,UAAA;IAAA,IAAA1F,QAAA;IAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAA0H,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAxH,IAAA,GAAAwH,UAAA,CAAAvH,IAAA;QAAA;UAAAuH,UAAA,CAAAvH,IAAA;UAAA,OACPhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZsH,KAAK,uCAAuC,CAC5C1I,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAYnF,MAAM,EAAG;QAAA;UAHrCuC,QAAQ,GAAA4F,UAAA,CAAApH,IAAA;UAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;QAAC;QAAA;UAAA,OAAA8G,UAAA,CAAA7G,IAAA;MAAA;IAAA,GAAA2G,SAAA;EAAA,CACvC,GAAC;EAEF/H,EAAE,CAAC,0BAA0B,mBAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAgI,UAAA;IAAA,IAAA9F,QAAA;IAAA,OAAAnC,YAAA,YAAAI,IAAA,UAAA8H,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA5H,IAAA,GAAA4H,UAAA,CAAA3H,IAAA;QAAA;UAAA2H,UAAA,CAAA3H,IAAA;UAAA,OACNhB,gBAAI,CACxBiB,OAAO,CAACC,kBAAG,CAAC,CACZsH,KAAK,uCAAuC,CAC5C1I,GAAG,CAAC,eAAe,YAAAyF,MAAA,CAAYnF,MAAM,EAAG;QAAA;UAHrCuC,QAAQ,GAAAgG,UAAA,CAAAxH,IAAA;UAIdpB,MAAM,CAAC4C,QAAQ,CAACrB,MAAM,CAAC,CAACF,EAAE,CAACK,KAAK,CAAC,GAAG,CAAC;QAAC;QAAA;UAAA,OAAAkH,UAAA,CAAAjH,IAAA;MAAA;IAAA,GAAA+G,SAAA;EAAA,CACvC,GAAC;AACJ,CAAC,CAAC"}